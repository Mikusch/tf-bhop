name: Compile and release

on:
  push:
    branches:
      master

env:
  PLUGIN_NAME: tf-bhop

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        sm-version: [ '1.11.x' ]
    permissions:
      contents: write

    steps:
      - uses: actions/checkout@v4

      - name: Set environment variables
        run: echo SCRIPTS_PATH=$(pwd) >> $GITHUB_ENV

      - name: Download includes
        run: |
          wget -P ${{ env.SCRIPTS_PATH }}/addons/sourcemod/scripting/include https://raw.githubusercontent.com/FlaminSarge/tf2attributes/master/scripting/include/tf2attributes.inc
          wget -P ${{ env.SCRIPTS_PATH }}/addons/sourcemod/scripting/include https://raw.githubusercontent.com/nosoop/SMExt-SourceScramble/master/scripting/include/sourcescramble.inc

      - name: Setup SourcePawn Compiler ${{ matrix.sm-version }}
        id: setup_sp
        uses: rumblefrog/setup-sp@master
        with:
          version: ${{ matrix.sm-version }}
          version-file: ./addons/sourcemod/scripting/${{ env.PLUGIN_NAME }}.sp
          define-name: PLUGIN_VERSION

      - name: Compile plugins
        run: |
          mkdir ../plugins
          spcomp -v2 -E -i "include" -o"../plugins/${{ env.PLUGIN_NAME }}.smx" ${{ env.PLUGIN_NAME }}.sp
          echo "===OUT FILES==="
          ls ../plugins
          echo "===VERSION==="
          echo ${{ steps.setup_sp.outputs.plugin-version }}
        working-directory: ${{ env.SCRIPTS_PATH }}/addons/sourcemod/scripting

      - name: Install zip
        uses: montudor/action-zip@v1

      - name: Zip output
        run: |
          zip -qq -y -r ${{ github.event.repository.name }}.zip configs plugins scripting extensions gamedata translations data
        working-directory: ${{ env.SCRIPTS_PATH }}/addons/sourcemod

      - name: List files in the directory
        run: ls -R
        working-directory: ${{ env.SCRIPTS_PATH }}/addons/sourcemod

      - name: List files in the zip
        run: unzip -l ${{ github.event.repository.name }}.zip
        working-directory: ${{ env.SCRIPTS_PATH }}/addons/sourcemod

      - name: Create Release
        uses: ncipollo/release-action@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          tag: ${{ steps.setup_sp.outputs.plugin-version }}
          artifacts: addons/sourcemod/${{ github.event.repository.name }}.zip
          draft: true
          allowUpdates: true
          updateOnlyUnreleased: true
          skipIfReleaseExists: true
